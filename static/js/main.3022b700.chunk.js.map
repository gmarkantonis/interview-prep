{"version":3,"sources":["components/CodeInput.tsx","components/NavBar.tsx","api/QuestionBank.ts","components/Info.tsx","components/Problem.tsx","containers/ProblemList.tsx","App.tsx","index.tsx"],"names":["CodeInput","React","useState","value","setValue","result","setResult","runCode","input","eval","e","console","error","p","w","bg","onChange","target","h","placeholder","spacing","colorScheme","onClick","NavBar","useColorMode","colorMode","toggleColorMode","color","position","zIndex","alignItems","size","aria-label","icon","Moon","Sun","bank","title","problem","examples","tags","reference","Info","props","problemData","data","whiteSpace","variant","map","example","index","toString","Problem","ProblemList","element","App","customTheme","extendTheme","useSystemColorMode","initialColorMode","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.3022b700.chunk.js","sourcesContent":["import React from 'react';\nimport {Box, Button, Code, HStack, LightMode, Text, Textarea} from \"@chakra-ui/react\"\n\nfunction CodeInput(): React.ReactElement {\n  const [value, setValue] = React.useState<string>(\"\")\n  const [result, setResult] = React.useState<string>(\"\")\n\n  const runCode = (input: string) => {\n    try {\n      // eslint-disable-next-line\n      setResult(eval(input));\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return (\n    <>\n      <Box p={5}>\n        <Code w=\"100%\" bg=\"none\">\n          <Textarea value={value} onChange={(e) => setValue(e.target.value)} h=\"300px\" placeholder=\"Write your function here and call it with your selected test case.\"></Textarea>\n        </Code>\n        <HStack spacing=\"24px\">\n          <LightMode>\n            <Button colorScheme=\"red\" onClick={() => runCode(value)}>\n              Run Code\n            </Button>\n          </LightMode>\n          <Code>\n            <Text>{result}</Text>\n          </Code>\n        </HStack>\n      </Box>\n    </>\n  );\n}\n\nexport default CodeInput;\n","import React from 'react';\nimport {Box, HStack, IconButton, Heading, LightMode, Spacer, useColorMode} from \"@chakra-ui/react\"\nimport {MoonIcon, SunIcon} from \"@chakra-ui/icons\";\n\nfunction NavBar(): React.ReactElement {\n  const { colorMode, toggleColorMode } = useColorMode()\n\n  return (\n    <>\n      <HStack h=\"60px\" bg=\"blue.500\" color=\"white\" p={5} position=\"fixed\" zIndex=\"99\" w=\"100%\" alignItems=\"center\">\n        <Heading size=\"lg\">Interview Prep</Heading>\n        <Spacer />\n        <LightMode>\n          <IconButton \n            colorScheme=\"red\" \n            onClick={toggleColorMode}\n            aria-label=\"Light/dark mode\"\n            icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n          />\n        </LightMode>\n      </HStack>\n      <Box h=\"60px\"/>\n    </>\n  );\n}\n\nexport default NavBar;\n","interface question {\n  title: string,\n  problem: string,\n  reference?: string,\n  examples: (string | boolean)[][],\n  tags: string[]\n}\n\nexport function getQuestions(): question[] {\n  return bank;\n}\n\nconst bank: question[] = [\n  {\n    title: \"Valid Parenthesis\",\n    problem: \"Given a string, return true if every open parenthesis '(' has a corresponding closed parenthesis ')'\",\n    examples: [\n      [`\"((Hello), (World))\"`, true],\n      [`\"Hi george :)\"`, false],\n      [`\"())\"`, false],\n      [`\"()()\"`, true],\n      [`\"(())\"`, true],\n      [`\"(()\"`, false],\n      [`\"((\"`, false],\n      [`\"())(\"`, false],\n      [`\")()\"`, false],\n      [`\"))()\"`, false]\n    ],\n    tags: []\n  },\n  {\n    title: \"Reversing Carets\",\n    problem: \"Your goal is to write a function that takes in a string as input and returns that string reversing whatever text is inside the caret marks.\",\n    examples: [\n        [`\"foo^bat^bar\"`, `\"footabbar\"`],\n        [`\"^a^bcd^efgh^ijklm^nopqrs^tuvwxy^z^\"`, `\"zbcdsrqponijklmhgfetuvwxya\"`]\n    ],\n    tags: []\n  },\n  {\n    title: \"Spell Check\",\n    problem: `Implement a function to determine if a word is spelled correctly, and if it is not spelled correctly return the top options for the correct spelling of the intended word. You can use the following as a dictionary.`,\n    reference:\n`[\"family\", \"can\", \"cab\", \"cave\", \"it\", \"ant\", \"bit\", \"bait\"]`,\n    examples: [\n      [`\"family\"`, `[\"family\"]`],\n      [`\"faily\"`, `[\"family\"]`],\n      [`\"fammily\"`, `[\"family\"]`],\n      [`\"faxily\"`, `[\"family\"]`],\n      [`\"it\"`, `[\"it\", \"bit\"]`],\n      [`\"\"`, `[\"\"]`],\n    ],\n    tags: []\n  },\n  {\n    title: \"Telephone\",\n    problem: \"Given a number, return the list of strings that could be texted if using a dialer. The following letters can be printed per number.\",\n    reference: \n`0 -> \n1 -> \n2 -> a, b, c\n3 -> d, e, f\n4 -> g, h, i\n5 -> j, k, l\n6 -> m, n, o\n7 -> p, q, r, s\n8 -> t, u, v\n9 -> w, x, y, z\n`,\n    examples: [\n        [`123`, `[\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"]`],\n        [`\"a!\"`, `NaN`],\n        [`\"000\"`, `\"\"`],\n        [`\"\"`, `\"\"`],\n    ],\n    tags: []\n  },\n  {\n    title: \"S Number\",\n    problem: \"A number qualifies as an S nunber if it's squareroot equals some permutation of it's numbers.\",\n    reference: `Explanation: sqrt(9801) === 98 + 0 + 1 === 99`,\n    examples: [\n        [`9801`, `true`],\n        [`8281`, `true`],\n        [`6724`, `true`],\n    ],\n    tags: []\n  },\n  {\n    title: \"Encoding\",\n    problem: \"Write a function that takes in a string (only a-z, lowercase) and returns a compressed string with repeated characters replaced by a single instance follow by a number.\",\n    examples: [\n        [`\"a\"`, `\"a\"`],\n        [`\"aa\"`, `\"aa\"`],\n        [`\"aaaa\"`, `\"a4\"`],\n        [`\"baaad\"`, `\"ba3d\"`],\n        [`\"badbadbad\"`, `\"bad3\"`],\n        [`\"badbeebad\"`, `\"badbeebad\"`],\n    ],\n    tags: []\n  },\n  {\n    title: \"Highest Number\",\n    problem: \"Write a function that takes a list of numbers, and returns the largest number in the list. If there are no numbers in the list, return 0.\",\n    examples: [\n        [`[7, 2, 6, 3]`, `7`],\n        [`[]`, `0`]\n    ],\n    tags: []\n  },\n  {\n    title: \"Word Wrap & Justify\",\n    problem: \"Given a string and line limit, write a function that can wrap words into an array of strings with a set max length and adds hyphens to be exactly the set length., \",\n    reference: `The day began as still as the night abruptly lighted with brilliant flame`,\n    examples: [\n        [`\"wrap\", 24`, `[\"The day began as still\", \"as the night abruptly\", \"lighted with brilliant\", \"flame\"]`],\n        [`\"justify\", 24`, `[\"The--day--began-as-still\", \"as--the--night--abruptly\", \"lighted--with--brilliant\", \"flame\"]`],\n        [`\"wrap\", 25`, `[\"The day began as still as\", \"the night abruptly\", \"lighted with brilliant\", \"flame\"]`],\n        [`\"justify\", 25`, `[\"The-day-began-as-still-as\", \"the-----night----abruptly\", \"lighted---with--brilliant\", \"flame\"]`],\n        [`\"wrap\", 40`, `[\"The day began as still as the night\", \"abruptly lighted with brilliant flame\"]`],\n        [`\"justify\", 40`, `[\"The--day--began--as--still--as-the-night\", \"abruptly--lighted--with--brilliant-flame\"]`],\n    ],\n    tags: []\n  },\n  {\n    title: \"MinStack\",\n    problem: \"Write a stack class with the following methods: push, pop, peek. Push adds to the top of the stack. Pop removes top item from stack and returns it. Peek inspects top item and returns it, but does not remove it. Implement a new method min, that returns the minimum item in the stack. The min method should be constant.\",\n    examples: [\n        [`\"minStack.min.pop()\"`, `\"???\"`],\n    ],\n    tags: []\n  },\n  {\n    title: \"Fibonacci Sequence\",\n    problem: \"Write a function that given a number n, returns the nth Fibonacci number.\",\n    examples: [\n      [`\"0\"`, `\"0\"`],\n      [`\"1\"`, `\"1\"`],\n      [`\"2\"`, `\"1\"`],\n      [`\"3\"`, `\"2\"`],\n      [`\"4\"`, `\"3\"`],\n      [`\"5\"`, `\"5\"`],\n      [`\"6\"`, `\"8\"`],\n      [`\"7\"`, `\"13\"`],\n      [`\"15\"`, `\"610\"`],\n      [`\"50\"`, `\"12586269025\"`]\n    ],\n    tags: []\n  },\n]\n","import {Code, Flex, Heading, Stack, Table, Tbody, Td, Th, Thead, Tr, Text} from \"@chakra-ui/react\"\n\ninterface InfoProps {\n  data: {\n    title: string,\n    problem: string,\n    reference?: string,\n    examples: (string | boolean)[][]\n  }\n}\n\nfunction Info(props: InfoProps): React.ReactElement {\n  const problemData = props.data;\n  \n  return (\n      <Stack spacing={2}>\n        <Heading size=\"md\">\n          {problemData.title}\n        </Heading>\n        <Text>\n          {problemData.problem}\n        </Text>\n        {problemData.reference && <Code p={5} whiteSpace=\"pre\">{problemData.reference}</Code>}\n        <Flex><Code w=\"100%\"><Table size=\"sm\" variant=\"striped\">\n          <Thead>\n            <Tr>\n              <Th>Input</Th>\n              <Th>Output</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {problemData.examples.map((example: (string | boolean)[], index: number) => {\n              return <Tr key={index}>\n                <Td>{example[0]}</Td>\n                <Td>{example[1].toString()}</Td>\n              </Tr>\n            })}\n          </Tbody>\n        </Table></Code></Flex>\n      </Stack>\n  );\n}\n\nexport default Info;\n","import {Box} from \"@chakra-ui/react\"\nimport Info from \"./Info\";\nimport CodeInput from \"./CodeInput\";\n\ninterface ProblemProps {\n  data: {\n    title: string,\n    problem: string,\n    reference?: string,\n    examples: (string | boolean)[][]\n  }\n}\n\nfunction Problem(props: ProblemProps): React.ReactElement {\n  return <Box p={5}>\n    <Info data={props.data}/>\n    <CodeInput />\n  </Box>\n}\n\nexport default Problem;\n","import {getQuestions} from '../api/QuestionBank';\nimport Problem from \"../components/Problem\";\n\nfunction ProblemList(): React.ReactElement {\n  return (\n    <>\n        {getQuestions().map((element, index) => {\n          return <Problem data={element} key={index}/>\n        })}\n    </>\n  );\n}\n\nexport default ProblemList;\n","import React from 'react';\nimport NavBar from \"./components/NavBar\";\nimport ProblemList from './containers/ProblemList';\n\nfunction App(): React.ReactElement {\n  return (\n    <>\n      <NavBar />\n      <ProblemList />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {ChakraProvider, extendTheme} from \"@chakra-ui/react\"\n\nconst customTheme = extendTheme({ \n  useSystemColorMode: true,\n  initialColorMode: \"dark\"\n })\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={customTheme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}